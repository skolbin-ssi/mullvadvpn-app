
java.lang.IllegalArgumentException
	at net.sourceforge.plantuml.posimo.Path.<init>(Path.java:53)
	at net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker.<init>(CucaDiagramTxtMaker.java:113)
	at net.sourceforge.plantuml.cucadiagram.CucaDiagram.createFilesTxt(CucaDiagram.java:678)
	at net.sourceforge.plantuml.cucadiagram.CucaDiagram.exportDiagramInternal(CucaDiagram.java:628)
	at net.sourceforge.plantuml.UmlDiagram.exportDiagramNow(UmlDiagram.java:204)
	at net.sourceforge.plantuml.AbstractPSystem.exportDiagram(AbstractPSystem.java:140)
	at net.sourceforge.plantuml.PSystemUtils.exportDiagramsCuca(PSystemUtils.java:233)
	at net.sourceforge.plantuml.PSystemUtils.exportDiagrams(PSystemUtils.java:89)
	at net.sourceforge.plantuml.SourceFileReaderAbstract.getGeneratedImages(SourceFileReaderAbstract.java:160)
	at net.sourceforge.plantuml.Run.manageFileInternal(Run.java:530)
	at net.sourceforge.plantuml.Run.processArgs(Run.java:414)
	at net.sourceforge.plantuml.Run.manageAllFiles(Run.java:381)
	at net.sourceforge.plantuml.Run.main(Run.java:192)

@startuml
hide empty description
scale 10000

left to right direction
!pragma layout elk


component "Mullvad daemon" as mullvad_daemon {
  () "Management interface" as management_interface
  () "Mullvad API" as mullvad_api

  node "Daemon" as daemon {
    [Settings] as settings #yellow
    [Account history] as account_history #yellow
    [Inactivity timer] as inactivity_timer #yellow
    [Various state around tunnels and relays] #yellow
  }

  node "Tunnel state machine" as tsm {
    [Firewall] as firewall #yellow
    [DNS] as dns #yellow
    [Routing] as routing
    [Tunnel] as tunnel
    [Offline monitor] as offline_monitor
  }

  [Account service] as account_manager
  [Mullvad API client] as rest_service
  [Relay list updater] as relay_list_updater
  [Version updater] as version_updater
  [Relay selector] as relay_selector #yellow
}


management_interface -> daemon : Incoming RPCs

daemon -> tsm : Sets target tunnel state
tsm -> daemon : "Notifies of changes to tunnel state, gets tunnel connection config"
tsm -> daemon : Get tunnel connection config
daemon -> relay_selector : Select a relay for a connection
daemon -> rest_service : Change API availability
daemon -> relay_list_updater : Force relay list update
daemon -> version_updater : Fetch current version
daemon -> account_manager : Fetch account data

relay_list_updater -> relay_selector : Update relay list
account_manager -> daemon : Account/device events


rest_service -> relay_selector : Select bridge relay for API connection
rest_service -> tsm : Unblock API endpoint
rest_service -> mullvad_api : Send requests to our web service

relay_list_updater -> rest_service : Fetch relay list from API
version_updater -> rest_service : Fetch latest app versions
account_manager -> rest_service : Fetch account data


@enduml

